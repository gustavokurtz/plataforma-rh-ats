// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Job {
  id          Int             @id @default(autoincrement())
  title       String
  description String
  salary      Float?
  location    String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  isActive    Boolean         @default(true)
  applications JobApplication[]
}

model Candidate {
  id           Int             @id @default(autoincrement())
  name         String
  email        String         @unique
  phone        String?
  resume       String?        // URL or path to resume file
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  applications JobApplication[]
}

model JobApplication {
  id          Int       @id @default(autoincrement())
  job         Job       @relation(fields: [jobId], references: [id])
  jobId       Int
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int
  status      ApplicationStatus @default(PENDING)
  appliedAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([jobId, candidateId]) // Prevent duplicate applications
}

enum ApplicationStatus {
  PENDING
  REVIEWING
  INTERVIEWED
  ACCEPTED
  REJECTED
}
